FROM nvidia/cuda:12.8.1-cudnn-devel-ubuntu24.04

# Install system dependencies
RUN apt update && apt install -y pkg-config libssl-dev zlib1g-dev clang curl

# Install LLVM v7
RUN curl -sSf -L -O http://security.ubuntu.com/ubuntu/pool/universe/libf/libffi7/libffi7_3.3-5ubuntu1_amd64.deb && \
curl -sSf -L -O http://mirrors.kernel.org/ubuntu/pool/universe/l/llvm-toolchain-7/llvm-7_7.0.1-12_amd64.deb && \
curl -sSf -L -O http://mirrors.kernel.org/ubuntu/pool/universe/l/llvm-toolchain-7/llvm-7-dev_7.0.1-12_amd64.deb && \
curl -sSf -L -O http://mirrors.kernel.org/ubuntu/pool/universe/l/llvm-toolchain-7/libllvm7_7.0.1-12_amd64.deb && \
curl -sSf -L -O http://mirrors.kernel.org/ubuntu/pool/universe/l/llvm-toolchain-7/llvm-7-runtime_7.0.1-12_amd64.deb && \
apt-get install -y ./*.deb && \
ln -s /usr/bin/llvm-config-7 /usr/bin/llvm-config && \
rm ./*.deb

# Install Rust
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y

# Set environment variables for the build
ENV LLVM_CONFIG="llvm-config-7" \
LLVM_LINK_STATIC="1" \
RUST_LOG="info" \
LD_LIBRARY_PATH="/usr/local/cuda/nvvm/lib64/"

# Copy source code into the image
COPY . /app
WORKDIR /app

# Build the project
RUN . "$HOME/.cargo/env" && cd gpu_runner && cargo build --release

# The binary will be in /app/target/release/
