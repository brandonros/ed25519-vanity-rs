#FROM docker.io/nvidia/cuda:12.9.0-cudnn-devel-ubuntu24.04
FROM docker.io/nvidia/cuda:12.8.1-cudnn-devel-ubuntu24.04

# install base dependencies
RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get -qq -y install curl lsb-release wget software-properties-common gnupg

# install llvm 7
WORKDIR /data/llvm7
RUN DEBIAN_FRONTEND=noninteractive apt-get -qq -y install clang
RUN curl -sSf -L -O http://security.ubuntu.com/ubuntu/pool/universe/libf/libffi7/libffi7_3.3-5ubuntu1_amd64.deb && \
    curl -sSf -L -O http://mirrors.kernel.org/ubuntu/pool/universe/l/llvm-toolchain-7/llvm-7_7.0.1-12_amd64.deb && \
    curl -sSf -L -O http://mirrors.kernel.org/ubuntu/pool/universe/l/llvm-toolchain-7/llvm-7-dev_7.0.1-12_amd64.deb && \
    curl -sSf -L -O http://mirrors.kernel.org/ubuntu/pool/universe/l/llvm-toolchain-7/libllvm7_7.0.1-12_amd64.deb && \
    curl -sSf -L -O http://mirrors.kernel.org/ubuntu/pool/universe/l/llvm-toolchain-7/llvm-7-runtime_7.0.1-12_amd64.deb && \
    apt-get install -y ./*.deb && \
    ln -s /usr/bin/llvm-config-7 /usr/bin/llvm-config && \
    rm -rf ./*.deb

# install llvm 19
# RUN curl -L -O https://apt.llvm.org/llvm.sh && \
#     chmod +x llvm.sh && \
#     ./llvm.sh 19

# install layer 2 depdencncies
RUN DEBIAN_FRONTEND=noninteractive apt-get -qq -y install git pkg-config libssl-dev libpolly-19-dev zlib1g-dev libzstd-dev

# install rust
RUN curl -sSf -L https://sh.rustup.rs | bash -s -- -y --default-toolchain nightly-2025-03-02 --profile complete
ENV PATH="/root/.cargo/bin:${PATH}"

# set compliation flags
ENV LD_LIBRARY_PATH="/usr/local/cuda/nvvm/lib64:${LD_LIBRARY_PATH}"
ENV LLVM_LINK_STATIC=1

# Copy source code into the image
COPY . /app
WORKDIR /app

# Build the project
RUN . "$HOME/.cargo/env" && cargo build --release -p gpu_runner -j1

# The binary will be /app/target/release/gpu_runner
# The PTX will be /app/target/cuda-builder/nvptx64-nvidia-cuda/release/kernels.ptx
